{"version":3,"file":"dependency.service.js","sourceRoot":"","sources":["../../src/question/dependency.service.ts"],"names":[],"mappings":"AAEA,OAAO,EAAc,kBAAkB,EAAY,MAAM,GAAG,CAAC;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AAEtC,IAAA;;;IAEgB,8BAAY,GAA1B,UAA2B,QAAuB,EAAE,SAAoB;QACtE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,IAAI,CAAC,KAAK,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;YACjE,MAAM,CAAC,KAAK,CAAC;SACd;QAED,GAAG,CAAC,CAAqB,UAAqB,EAArB,KAAA,QAAQ,CAAC,YAAY,EAArB,cAAqB,EAArB,IAAqB;YAAzC,IAAM,UAAU,SAAA;YACnB,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpC,QAAQ,CAAC;aACV;YAED,IAAM,gBAAgB,GAAW,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;YACtE,IAAM,MAAM,GAAY,iBAAiB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;YAEzF,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,iBAAiB,CAAC,oBAAoB,CAAe,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;gBAEzF,MAAM,CAAC,IAAI,CAAC;aACb;SACF;QAED,iBAAiB,CAAC,oBAAoB,CAAe,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QAE1F,MAAM,CAAC,KAAK,CAAC;KACd;IAEc,kCAAgB,GAA/B,UAAgC,gBAAwB,EAAE,UAAsB;QAC9E,MAAM,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5B,KAAK,kBAAkB,CAAC,MAAM;gBAC5B,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,gBAAgB,CAAC,KAAK,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;YAClH,KAAK,kBAAkB,CAAC,SAAS;gBAC/B,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;YAC9E,KAAK,kBAAkB,CAAC,YAAY;gBAClC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;YAC9E,KAAK,kBAAkB,CAAC,UAAU;gBAChC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,gBAAgB,CAAC,KAAK,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;SACnH;QAED,MAAM,CAAC,KAAK,CAAC;KACd;IAEc,sCAAoB,GAAnC,UAAoC,WAAwB,EAAE,MAAe;QAC3E,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,WAAW,CAAC,OAAO,EAAE,CAAC;SACvB;QAAC,IAAI,CAAC,CAAC;YACN,WAAW,CAAC,MAAM,EAAE,CAAC;SACtB;KACF;4BArDH;IAsDC,CAAA;AAjDD,6BAiDC","sourcesContent":["import { FormGroup, FormControl } from '@angular/forms';\n\nimport { Dependency, DependencyCriteria, Question } from '.';\nimport { StringUtils } from '../util';\n\nexport class DependencyService {\n\n  public static hideQuestion(question: Question<any>, formGroup: FormGroup): boolean {\n    if (!question.dependencies || 0 === question.dependencies.length) {\n      return false;\n    }\n\n    for (const dependency of question.dependencies) {\n      if (!formGroup.get(dependency.code)) {\n        continue;\n      }\n\n      const answerDependency: string = formGroup.get(dependency.code).value;\n      const result: boolean = DependencyService.executeOperation(answerDependency, dependency);\n\n      if (!result) {\n        DependencyService.setStatusFormControl(<FormControl> formGroup.get(question.name), true);\n\n        return true;\n      }\n    }\n\n    DependencyService.setStatusFormControl(<FormControl> formGroup.get(question.name), false);\n\n    return false;\n  }\n\n  private static executeOperation(answerDependency: string, dependency: Dependency): boolean {\n    switch (dependency.criteria) {\n      case DependencyCriteria.EQUALS:\n        return StringUtils.convertToString(answerDependency) === StringUtils.convertToString(dependency.expectedAnswer);\n      case DependencyCriteria.LESS_THAN:\n        return parseFloat(answerDependency) < parseFloat(dependency.expectedAnswer);\n      case DependencyCriteria.GREATER_THAN:\n        return parseFloat(answerDependency) > parseFloat(dependency.expectedAnswer);\n      case DependencyCriteria.NOT_EQUALS:\n        return StringUtils.convertToString(answerDependency) !== StringUtils.convertToString(dependency.expectedAnswer);\n    }\n\n    return false;\n  }\n\n  private static setStatusFormControl(formControl: FormControl, hidden: boolean): void {\n    if (hidden) {\n      formControl.disable();\n    } else {\n      formControl.enable();\n    }\n  }\n}\n"]}
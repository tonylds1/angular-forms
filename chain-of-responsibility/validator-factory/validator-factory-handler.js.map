{"version":3,"file":"validator-factory-handler.js","sourceRoot":"","sources":["../../../src/chain-of-responsibility/validator-factory/validator-factory-handler.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,2BAA2B,EAAE,MAAM,SAAS,CAAC;AAEtD,IAAA;;;IAIS,wCAAM,GAAb,UAAc,OAAgC;QAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAClC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;SAC5B;QAED,MAAM,CAAC,IAAI,CAAC;KACb;IAEM,wCAAM,GAAb,UAAc,UAAsB;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAC5C;QAED,MAAM,IAAI,2BAA2B,CAAC,sBAAoB,UAAU,CAAC,IAAI,iBAAc,CAAC,CAAC;KAC1F;kCAzBH;IA0BC,CAAA;AArBD,mCAqBC","sourcesContent":["import { ValidatorFn } from '@angular/forms';\n\nimport { Validation } from '../../validation';\nimport { ValidationTypeNotFoundError } from './error';\n\nexport abstract class ValidatorFactoryHandler {\n\n  private nextHandler: ValidatorFactoryHandler;\n\n  public append(handler: ValidatorFactoryHandler): ValidatorFactoryHandler {\n    if (this.nextHandler) {\n      this.nextHandler.append(handler);\n    } else {\n      this.nextHandler = handler;\n    }\n\n    return this;\n  }\n\n  public handle(validation: Validation): ValidatorFn {\n    if (this.nextHandler) {\n      return this.nextHandler.handle(validation);\n    }\n\n    throw new ValidationTypeNotFoundError(`Validation Type (${validation.type}) not found.`);\n  }\n}\n"]}
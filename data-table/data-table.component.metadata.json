[{"__symbolic":"module","version":4,"metadata":{"DataTableComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"rb-data-table","template":"\n    <fieldset *ngIf=\"Status['READY'] === status\" class=\"rb-data-table rb-data-table-{{ group.code }}\" [formGroup]=\"formGroup\"\n      [ngClass]=\"{ 'read-only': readOnly }\">\n      <legend>\n        <span [ngClass]=\"{ 'required-control': group.isRequired() && !readOnly }\">\n          {{ group.title }}\n        </span>\n        {{ group.description }}\n      </legend>\n\n      <div class=\"table-responsive\">\n        <table class=\"table table-bordered table-striped table-hover\">\n          <thead>\n            <tr>\n              <th class=\"text-center\" *ngFor=\"let question of group.questions[0]\">\n                <span [ngClass]=\"{ 'required-control': question.isRequired() && !readOnly }\">\n                  {{ question.description }}\n                </span>\n              </th>\n              <th class=\"text-center\" *ngIf=\"!readOnly\">\n                {{ 'ACTION' | translate }}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr [formGroup]=\"newFormGroup\" *ngIf=\"!readOnly\">\n              <td *ngFor=\"let question of group.questions[0]\">\n                <ng-container [ngSwitch]=\"question.type\">\n\n                  <ng-template ngSwitchCase=\"checkbox\">\n                    <div class=\"checkbox\">\n                      <label>\n                        <input type=\"checkbox\" [name]=\"question.name\" [formControlName]=\"question.name\" />\n                        {{ question.description }}\n                      </label>\n                      <rb-validation-message [validations]=\"question.validations\"\n                                             [control]=\"newFormGroup.get(question.name)\"\n                                             [submitted]=\"submitted\">\n                      </rb-validation-message>\n                    </div> <!--/.checkbox-->\n                  </ng-template> <!--/checkbox-->\n\n                  <ng-template ngSwitchCase=\"radio\">\n                    <div class=\"radio\" *ngFor=\"let option of question.options\">\n                      <label>\n                        <input type=\"radio\" [name]=\"question.name\" [value]=\"option\" [formControlName]=\"question.name\" />\n                        {{ option }}\n                      </label>\n                    </div> <!--/.radio-->\n                    <rb-validation-message [validations]=\"question.validations\"\n                                           [control]=\"newFormGroup.get(question.name)\"\n                                           [submitted]=\"submitted\">\n                    </rb-validation-message>\n                  </ng-template> <!--/radio-->\n\n                  <ng-template ngSwitchCase=\"select\">\n                    <select [id]=\"question.name\" class=\"form-control\" [name]=\"question.name\" #selectQuestion\n                          [formControlName]=\"question.name\"\n                          (change)=\"onChangeOptionSelect(selectQuestion, newFormGroup.get(question.name), question)\">\n                      <option disabled [value]=\"null\">\n                        {{ question.placeholder ? question.placeholder : '' }}\n                      </option>\n                      <option *ngFor=\"let option of question.options\" [value]=\"option['value'] || option\">\n                        {{ option['description'] || option }}\n                      </option>\n                    </select>\n                    <ng-container *ngIf=\"question.editableOption && question.editableOption.length\">\n                      <input [hidden]=\"question.editableOption !== selectQuestion.value\"\n                             type=\"text\" [id]=\"question.name\" class=\"form-control editable-option\" [name]=\"question.name\"\n                             [formControlName]=\"question.name\" />\n                    </ng-container>\n                    <rb-validation-message [validations]=\"question.validations\"\n                                           [control]=\"newFormGroup.get(question.name)\"\n                                           [submitted]=\"submitted\">\n                    </rb-validation-message>\n                  </ng-template> <!--/select-->\n\n                  <ng-template ngSwitchCase=\"textarea\">\n                    <textarea [id]=\"question.name\" class=\"form-control\" [name]=\"question.name\" rows=\"5\"\n                              placeholder=\"{{ question.placeholder ? question.placeholder : '' }}\"\n                              [formControlName]=\"question.name\">\n                    </textarea>\n                    <rb-validation-message [validations]=\"question.validations\"\n                                           [control]=\"newFormGroup.get(question.name)\"\n                                           [submitted]=\"submitted\">\n                    </rb-validation-message>\n                  </ng-template> <!--/textarea-->\n\n                  <ng-template ngSwitchCase=\"text\" ngSwitchDefault>\n                    <input type=\"text\" [id]=\"question.name\" class=\"form-control\" [name]=\"question.name\"\n                            placeholder=\"{{ question.placeholder ? question.placeholder : '' }}\"\n                            [formControlName]=\"question.name\" [mask]=\"question.mask\" />\n                    <rb-validation-message [validations]=\"question.validations\"\n                                           [control]=\"newFormGroup.get(question.name)\"\n                                           [submitted]=\"submitted\">\n                    </rb-validation-message>\n                  </ng-template> <!--/text-->\n\n                </ng-container> <!--/ngSwitch-questionType-->\n              </td>\n              <td class=\"text-center\">\n                <button class=\"btn btn-default btn-add-data\" (click)=\"addData()\">\n                  <i class=\"rb-ico rb-ico-add\" aria-hidden=\"true\"></i>\n                  {{ 'ADD' | translate }}\n                </button>\n              </td>\n            </tr>\n            <tr class=\"data\" *ngFor=\"let data of formArray?.value; let indexData = index\">\n              <td *ngFor=\"let key of getKeysFromObject(data)\" [class.text-center]=\"isCheckbox(getQuestionByName(key))\">\n                <ng-container [ngSwitch]=\"getQuestionByName(key).type\">\n                  <ng-template ngSwitchCase=\"checkbox\">\n                    <i class=\"rb-ico rb-ico-square rb-ico-{{ data[key] ? 'checked' : 'unchecked' }}\" aria-hidden=\"true\"></i>\n                  </ng-template>\n\n                  <ng-template ngSwitchDefault>\n                    {{ data[key] || 'NOT_INFORMED' | translate }}\n                  </ng-template>\n                </ng-container>\n              </td>\n              <td class=\"text-center\" *ngIf=\"!readOnly\">\n                <button class=\"btn btn-default btn-remove-data\" (click)=\"removeData(indexData)\">\n                  <i class=\"rb-ico rb-ico-remove\" aria-hidden=\"true\"></i>\n                  {{ 'REMOVE' | translate }}\n                </button>\n              </td>\n            </tr>\n            <tr *ngIf=\"readOnly && !formArray?.value.length\">\n              <td [attr.colspan]=\"group.questions[0].length\" class=\"text-center\">{{ 'NO_REGISTERS' | translate }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div> <!--/.table-responsive-->\n      <rb-validation-message [validations]=\"group.validations\"\n                             [control]=\"formArray\"\n                             [submitted]=\"formGroupSubmitted\">\n      </rb-validation-message>\n    </fieldset>\n  "}]}],"members":{"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":157,"character":3}}]}],"group":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":158,"character":3}}]}],"formGroupSubmitted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":159,"character":3}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":160,"character":3}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":162,"character":3}}]}],"ready":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":163,"character":3}}]}],"ngOnInit":[{"__symbolic":"method"}],"onChangeOptionSelect":[{"__symbolic":"method"}],"getKeysFromObject":[{"__symbolic":"method"}],"addData":[{"__symbolic":"method"}],"removeData":[{"__symbolic":"method"}],"resetForms":[{"__symbolic":"method"}],"getQuestionByName":[{"__symbolic":"method"}],"isCheckbox":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}]}}}}]
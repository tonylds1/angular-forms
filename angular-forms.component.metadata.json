[{"__symbolic":"module","version":4,"metadata":{"AngularFormsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":14,"character":1},"arguments":[{"selector":"rb-angular-forms","template":"\n    <form *ngIf=\"Status['READY'] === status\" class=\"rb-angular-forms\" [formGroup]=\"formGroup\" [ngClass]=\"{ 'read-only': readOnly }\">\n      <ng-container *ngFor=\"let group of groups\">\n\n        <ng-container [ngSwitch]=\"group.type\">\n\n          <ng-container *ngSwitchCase=\"'group'\">\n            <fieldset class=\"rb-fieldset rb-fieldset-{{ group.code }}\" [formGroup]=\"formGroup.get(group.code)\">\n              <legend *ngIf=\"'Ungrouped' !== group.title\">{{ group.title }}</legend>\n              <p>{{ group.description }}</p>\n              <ng-container *ngFor=\"let question of group.questions\">\n\n                <ng-container [ngSwitch]=\"question.type\">\n\n                  <ng-template ngSwitchCase=\"checkbox\">\n                    <div class=\"form-group\" [hidden]=\"hideQuestion(question, formGroup.get(group.code))\">\n                      <ng-container *ngIf=\"!readOnly; else readOnlyCheckbox\">\n                        <div class=\"checkbox\">\n                          <label>\n                            <input type=\"checkbox\" [name]=\"question.name\" [formControlName]=\"question.name\" />\n                            <span [ngClass]=\"{ 'required-control': question.isRequired() }\">\n                              {{ question.description }}\n                            </span>\n                          </label>\n                          <rb-validation-message [validations]=\"question.validations\"\n                                                 [control]=\"formGroup.get(group.code).get(question.name)\"\n                                                 [submitted]=\"submitted\">\n                          </rb-validation-message>\n                        </div> <!--/.checkbox-->\n                      </ng-container> <!--/!readOnly-->\n\n                      <ng-template #readOnlyCheckbox>\n                        <label>\n                          <i class=\"rb-ico rb-ico-square rb-ico-{{ question.answer ? 'checked' : 'unchecked' }}\" aria-hidden=\"true\"></i>\n                          {{ question.description }}\n                        </label>\n                      </ng-template> <!--/readOnly-->\n                    </div> <!--/.form-group-->\n                  </ng-template> <!--/checkbox-->\n\n                  <ng-template ngSwitchCase=\"radio\">\n                    <div class=\"form-group\" [hidden]=\"hideQuestion(question, formGroup.get(group.code))\">\n                      <ng-container *ngIf=\"!readOnly; else readOnlyRadio\">\n                        <label [ngClass]=\"{ 'required-control': question.isRequired() }\">\n                          {{ question.description }}\n                        </label>\n                        <div class=\"radio\" *ngFor=\"let option of question.options\">\n                          <label>\n                            <input type=\"radio\" [name]=\"question.name\" [value]=\"option\" [formControlName]=\"question.name\" />\n                            {{ option }}\n                          </label>\n                        </div> <!--/.radio-->\n                        <rb-validation-message [validations]=\"question.validations\"\n                                               [control]=\"formGroup.get(group.code).get(question.name)\"\n                                               [submitted]=\"submitted\">\n                        </rb-validation-message>\n                      </ng-container> <!--/!readOnly-->\n\n                      <ng-template #readOnlyRadio>\n                        <label>{{ question.description }}</label>\n                        <span>{{ question.answer || 'NOT_INFORMED' | translate }}</span>\n                      </ng-template> <!--/readOnly-->\n                    </div> <!--/.form-group-->\n                  </ng-template> <!--/radio-->\n\n                  <ng-template ngSwitchCase=\"select\">\n                    <div class=\"form-group\" [hidden]=\"hideQuestion(question, formGroup.get(group.code))\">\n                      <ng-container *ngIf=\"!readOnly; else readOnlySelect\">\n                        <label [for]=\"question.name\" [ngClass]=\"{ 'required-control': question.isRequired() }\">\n                          {{ question.description }}\n                        </label>\n                        <select [id]=\"question.name\" class=\"form-control\" [name]=\"question.name\" #selectQuestion #question.name\n                                [formControlName]=\"question.name\"\n                                (change)=\"onChangeOptionSelect(selectQuestion, formGroup.get(group.code).get(question.name), question)\">\n                          <option disabled [value]=\"null\">\n                            {{ question.placeholder ? question.placeholder : '' }}\n                          </option>\n                          <option *ngFor=\"let option of question.options\" [value]=\"option['value'] || option\">\n                            {{ option['description'] || option }}\n                          </option>\n                        </select>\n                        <ng-container *ngIf=\"question.editableOption && question.editableOption.length\">\n                          <input [hidden]=\"question.editableOption !== selectQuestion.value\"\n                                 type=\"text\" [id]=\"question.name\" class=\"form-control editable-option\" [name]=\"question.name\"\n                                 [formControlName]=\"question.name\" />\n                        </ng-container>\n                        <rb-validation-message [validations]=\"question.validations\"\n                                               [control]=\"formGroup.get(group.code).get(question.name)\"\n                                               [submitted]=\"submitted\">\n                        </rb-validation-message>\n                      </ng-container> <!--!readOnly-->\n\n                      <ng-template #readOnlySelect>\n                        <label>{{ question.description }}</label>\n                        <span>{{ question.answer || 'NOT_INFORMED' | translate }}</span>\n                      </ng-template> <!--/readOnly-->\n                    </div> <!--/.form-group-->\n                  </ng-template> <!--/select-->\n\n                  <ng-template ngSwitchCase=\"textarea\">\n                    <div class=\"form-group\" [hidden]=\"hideQuestion(question, formGroup.get(group.code))\">\n                      <ng-container *ngIf=\"!readOnly; else readOnlyTextarea\">\n                        <label [for]=\"question.name\" [ngClass]=\"{ 'required-control': question.isRequired() }\">\n                          {{ question.description }}\n                        </label>\n                        <textarea [id]=\"question.name\" class=\"form-control\" [name]=\"question.name\" rows=\"5\"\n                                  placeholder=\"{{ question.placeholder ? question.placeholder : '' }}\"\n                                  [formControlName]=\"question.name\">\n                        </textarea>\n                        <rb-validation-message [validations]=\"question.validations\"\n                                               [control]=\"formGroup.get(group.code).get(question.name)\"\n                                               [submitted]=\"submitted\">\n                        </rb-validation-message>\n                      </ng-container> <!--!readOnly-->\n\n                      <ng-template #readOnlyTextarea>\n                        <label>{{ question.description }}</label>\n                        <span>{{ question.answer || 'NOT_INFORMED' | translate }}</span>\n                      </ng-template> <!--/readOnly-->\n                    </div> <!--/.form-group-->\n                  </ng-template> <!--/textarea-->\n\n                  <ng-template ngSwitchCase=\"text\" ngSwitchDefault>\n                    <div class=\"form-group\" [hidden]=\"hideQuestion(question, formGroup.get(group.code))\">\n                      <ng-container *ngIf=\"!readOnly; else readOnlyText\">\n                        <label [for]=\"question.name\" [ngClass]=\"{ 'required-control': question.isRequired() }\">\n                          {{ question.description }}\n                        </label>\n\n                        <rb-tooltip *ngIf=\"question.tooltip\"\n                            [tooltip]=\"question.tooltip\"\n                            [control]=\"formGroup.get(group.code).get(question.name)\">\n                        </rb-tooltip>\n\n                        <input type=\"text\" [id]=\"question.name\" class=\"form-control\" [name]=\"question.name\"\n                               placeholder=\"{{ question.placeholder ? question.placeholder : '' }}\"\n                               [formControlName]=\"question.name\" [mask]=\"question.mask\" #question.name />\n\n                        <rb-validation-message [validations]=\"question.validations\"\n                                               [control]=\"formGroup.get(group.code).get(question.name)\"\n                                               [submitted]=\"submitted\">\n                        </rb-validation-message>\n\n                      </ng-container> <!--!readOnly-->\n\n                      <ng-template #readOnlyText>\n                        <label>{{ question.description }}</label>\n                        <span>{{ question.answer || 'NOT_INFORMED' | translate }}</span>\n                      </ng-template> <!--readOnly-->\n                    </div> <!--/.form-group-->\n                  </ng-template> <!--/text-->\n                </ng-container> <!--/ngSwitch-questionType-->\n\n              </ng-container> <!--/ngFor-question-->\n            </fieldset>\n          </ng-container> <!--/ngSwitchCase-fieldset-->\n\n          <ng-container *ngSwitchDefault>\n            <rb-data-table [group]=\"group\" [formGroup]=\"formGroup\" [formGroupSubmitted]=\"submitted\" [readOnly]=\"readOnly\"\n              (error)=\"onError($event)\">\n            </rb-data-table>\n          </ng-container>\n\n        </ng-container> <!--/ngSwitch-groupType-->\n\n      </ng-container> <!--groups-->\n    </form>\n  "}]}],"members":{"groups":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":192,"character":3}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":193,"character":3}}]}],"lang":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":194,"character":3}}]}],"readOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":195,"character":3}}]}],"error":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":197,"character":3}}]}],"ready":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":198,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":203,"character":31},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":204,"character":30}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterViewChecked":[{"__symbolic":"method"}],"getGroupByCode":[{"__symbolic":"method"}],"hideQuestion":[{"__symbolic":"method"}],"onChangeOptionSelect":[{"__symbolic":"method"}],"submit":[{"__symbolic":"method"}],"getForm":[{"__symbolic":"method"}],"isPristine":[{"__symbolic":"method"}],"isDirty":[{"__symbolic":"method"}],"isValid":[{"__symbolic":"method"}],"getAnswersGroups":[{"__symbolic":"method"}],"getAnswers":[{"__symbolic":"method"}],"getNewAnswers":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}],"configTranslate":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"convertAnswersOfGroupToString":[{"__symbolic":"method"}],"clear":[{"__symbolic":"method"}],"printErrorLog":[{"__symbolic":"method"}]}}}}]
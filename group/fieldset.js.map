{"version":3,"file":"fieldset.js","sourceRoot":"","sources":["../../src/group/fieldset.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,GAAG,CAAC;AAGrC,IAAA;IAA8B,4BAAsB;IAElD,kBACE,IAAY,EACZ,KAAa,EACb,SAA0B,EAC1B,WAAmB;eAEnB,kBAAM,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC;KAC/D;IAEM,oCAAiB,GAAxB,UAAyB,IAAY;QACnC,GAAG,CAAC,CAAmB,UAAe,EAAf,KAAA,IAAI,CAAC,UAAU,EAAf,cAAe,EAAf,IAAe;YAAjC,IAAM,QAAQ,SAAA;YACjB,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,QAAQ,CAAC;aACjB;SACF;KACF;mBApBH;EAG8B,KAAK,EAkBlC,CAAA;AAlBD,oBAkBC","sourcesContent":["import { Group, GroupType } from '.';\nimport { Question } from '../question';\n\nexport class Fieldset extends Group<Question<any>[]> {\n\n  public constructor(\n    code: string,\n    title: string,\n    questions: Question<any>[],\n    description: string,\n  ) {\n    super(code, title, GroupType.FIELDSET, questions, description);\n  }\n\n  public getQuestionByName(name: string): Question<any> {\n    for (const question of this._questions) {\n      if (question.name === name) {\n        return question;\n      }\n    }\n  }\n}\n"]}